package com.javarush.task.task20.task2026;

/* 
Алгоритмы-прямоугольники
1. Дан двумерный массив N*N, который содержит несколько прямоугольников.
2. Различные прямоугольники не соприкасаются и не накладываются.
3. Внутри прямоугольник весь заполнен 1.
4. В массиве:
4.1) a[i, j] = 1, если элемент (i, j) принадлежит какому-либо прямоугольнику
4.2) a[i, j] = 0, в противном случае
5. getRectangleCount должен возвращать количество прямоугольников.
6. Метод main не участвует в тестировании

Требования:
1. В классе Solution должен существовать метод getRectangleCount с одним параметром типа byte[][].
2. Метод getRectangleCount должен быть публичным.
3. Метод getRectangleCount должен быть статическим.
4. Метод getRectangleCount должен возвращать количество прямоугольников (в соответствии с заданием) найденное в полученном массиве.
*/
public class Solution {
    public static void main(String[] args) {
        byte[][] a1 = new byte[][]{
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 0},
                {1, 1, 0, 1}
        };
        byte[][] a2 = new byte[][]{
                {1, 0, 0, 1},
                {0, 0, 0, 0},
                {0, 0, 0, 0},
                {1, 0, 0, 1}
        };


        int count1 = getRectangleCount(a1);
        System.out.println("count = " + count1 + ". Должно быть 2");
        int count2 = getRectangleCount(a2);
        System.out.println("count = " + count2 + ". Должно быть 4");

        //--------------------

    }
//Проще двумя циклами и одним if
//В цикле мы сравниваем элементы i и j если они равны 1, то плюсуем счетчик и ищем начало другого прямоугольника (поскольку один уже найден)
// начало ищется пока не встретится новая 1 у которой предыдущий элемент и верхний элемент не равны 0. как только встретили, это новый угол прямоугольника.

    public static int getRectangleCount(byte[][] a) {
        int count = 0;

        for(int i = 0; i < a.length; i++){
            for(int j = 0; j < a[i].length; j++){
                // если последний элемент строки == 1  || не последний элемент строки == 1 а следующий элемент строки == 0
                // => count++
                //добавить сюда еще два условия по вертикали. Если под 1 - ничего нет (последняя строка) || если под 1 ячейка ==0 ------------------------>DO IT
                //if( (a[i][j] == 1 && j == a[i].length-1) || (a[i][j] == 1 && a[i][j+1] == 0)){
                if( (a[i][j] == 1 && j == a[i].length-1 && i == a.length-1) || (j < a[i].length -1 && i < a.length-1 && a[i][j] == 1 && a[i][j+1] == 0 && a[i+1][j] == 0) || ((a[i][j] == 1 && i == a.length-1 && a[i][j+1] == 0 && j < a[i].length -1) || (a[i][j] == 1 && j == a[i].length-1 && a[i+1][j] == 0 && i < a.length-1))){
                    count++;
                }

            }
        }
        return count;
    }
}
